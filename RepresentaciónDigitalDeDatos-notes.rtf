{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Contents\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Representaci\u243?n de datos num\u233?ricos\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Datos enteros\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Datos fraccionarios\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Rango de representaci\u243?n\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Representaci\u243?n sin signo\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Representaci\u243?n con signo\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Sistema de Signo-magnitud (S-M)\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Representaci\u243?n de datos num\u233?ricos\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Hemos visto ejemplos de sistemas de numeraci\u243?n: en base 6, en base 10, o decimal, en base 2, o binario, en base 16, o hexadecimal, y en base 8, u octal; y sabemos convertir la representaci\u243?n de un n\u250?mero en cada una de estas bases, a los sistemas en las dem\u225?s bases. Sin embargo, a\u250?n nos falta considerar la representaci\u243?n num\u233?rica de varios casos importantes:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Hemos utilizado estos sistemas para representar \u250?nicamente n\u250?meros {\b enteros}. Nos falta ver de qu\u233? manera representar n\u250?meros racionales, es decir aquellos que tienen una parte fraccionaria (los "decimales").\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Adem\u225?s estos enteros han sido siempre {\b no negativos}, es decir, sabemos representar \u250?nicamente el 0 y los naturales. Nos falta considerar los negativos.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Por otra parte, no nos hemos planteado el problema de la {\b cantidad de d\u237?gitos}. Idealmente, un sistema de numeraci\u243?n puede usar infinitos d\u237?gitos para representar n\u250?meros arbitrariamente grandes. Si bien esto es matem\u225?ticamente correcto, las computadoras son objetos f\u237?sicos que tienen unas ciertas limitaciones, y con ellas no es posible representar n\u250?meros de infinita cantidad de d\u237?gitos.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En esta parte de la unidad mostraremos sistemas de representaci\u243?n utilizados en computaci\u243?n que permiten tratar estos problemas.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Datos enteros\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Veremos tres sistemas de representaci\u243?n de datos num\u233?ricos enteros, llamados {\b signo-magnitud}, {\b complemento a 2} y {\b exceso a 2{\super {\i n}\u8197?\u8722?\u8197?1}}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Datos fraccionarios\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Para representar fraccionarios consideraremos los sistemas de {\b punto fijo} y {\b punto flotante}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Rango de representaci\u243?n\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Cada sistema de representaci\u243?n de datos num\u233?ricos tiene su propio {\b rango de representaci\u243?n} (que podemos abreviar {\b RR}), o intervalo de n\u250?meros representables. Nung\u250?n n\u250?mero fuera de este rango puede ser representado en dicho sistema. Conocer este intervalo es importante para saber con qu\u233? limitaciones puede enfrentarse un programa que utilice alguno de esos sistemas.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 El rango de los n\u250?meros representados bajo un sistema est\u225? dado por sus {\b l\u237?mites inferior y superior}, que definen qu\u233? zona de la recta num\u233?rica puede ser representada. Como ocurre con todo intervalo num\u233?rico, el rango de representaci\u243?n puede ser escrito como [{\i a},\u8198?{\i b}], donde {\i a} y {\i b} son sus l\u237?mites inferior y superior, respectivamente.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Por la forma en que est\u225?n dise\u241?ados, algunos sistemas de representaci\u243?n s\u243?lo pueden representar n\u250?meros muy peque\u241?os, o s\u243?lo positivos, o tanto negativos como positivos. En general, el RR {\b ser\u225? m\u225?s grande cuantos m\u225?s d\u237?gitos binarios}, o bits, tenga el sistema. Sin embargo, el RR depende tambi\u233?n de la forma como el sistema {\b utilice} esos d\u237?gitos binarios, ya que un sistema puede ser m\u225?s o menos {\b eficiente} que otro en el uso de esos d\u237?gitos, aunque la cantidad de d\u237?gitos sea la misma en ambos sistemas.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Por lo tanto, decimos que el rango de representaci\u243?n depende a la vez de la {\b cantidad de d\u237?gitos} y de la {\b forma de funcionamiento} del sistema de representaci\u243?n.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Representaci\u243?n sin signo\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Consideremos primero qu\u233? ocurre cuando queremos representar n\u250?meros enteros {\b no negativos} (es decir, {\b positivos o cero}) sobre una cantidad fija de bits. Simplemente usamos el sistema binario de numeraci\u243?n, tal como lo conocemos, pero limit\u225?ndonos a una cantidad fija de bits o d\u237?gitos binarios. \u191?Cu\u225?l ser\u225? el rango de representaci\u243?n?\par}
{\pard \ql \f0 \sa180 \li0 \fi0 El {\b cero} siempre puede representarse (es decir, el l\u237?mite inferior del rango de representaci\u243?n ser\u225? 0). Pero \u191?cu\u225?l ser\u225? el l\u237?mite superior? Es decir, si la cantidad de d\u237?gitos binarios en este sistema es {\i k}, \u191?cu\u225?l es el n\u250?mero m\u225?s grande que podremos representar?\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Podemos estudiarlo de dos maneras.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b 1. Usando combinatoria}\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Contemos cu\u225?ntos n\u250?meros diferentes podemos escribir con {\i k} d\u237?gitos binarios. Imaginemos un n\u250?mero binario cualquiera con {\i k} d\u237?gitos. El d\u237?gito de m\u225?s a la derecha tiene \u250?nicamente dos posibilidades (0 o 1). Por cada una de \u233?stas hay nuevamente dos posibilidades para el siguiente hacia la izquierda (lo que da las cuatro posibilidades 00, 01, 10, 11). Por cada una de \u233?stas, hay dos posibilidades para el siguiente (dando las ocho posibilidades 000, 001, 010, 011, 100, 101, 110, 111), etc., y as\u237? hasta la posici\u243?n {\i k}. No hay m\u225?s posibilidades. Como hemos multiplicado 2 por s\u237? mismo {\i k} veces, la cantidad de n\u250?meros que se pueden escribir es 2{\super {\i k}}. Luego, el n\u250?mero m\u225?s grande posible es 2{\super {\i k}}\u8197?\u8722?\u8197?1. ({\b Pregunta}: \u191?Por qu\u233? 2{\super {\i k}}\u8197?\u8722?\u8197?1 y no 2{\super {\i k}}?).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\b 2. Usando \u225?lgebra}\par}
{\pard \ql \f0 \sa180 \li0 \fi0 El n\u250?mero m\u225?s grande que podemos representar en un sistema sin signo a {\i k} d\u237?gitos es, seguramente, aquel donde todos los {\i k} d\u237?gitos valen {\b 1}. La Expresi\u243?n General que hemos visto nos dice que si un n\u250?mero {\i n} est\u225? escrito en base 2, {\b con {\i k} d\u237?gitos}, entonces {\i n}\u8196?=\u8196?{\i x}{\sub {\i k}\u8197?\u8722?\u8197?1}\u8197?\u215?\u8197?2{\super {\i k}\u8197?\u8722?\u8197?1}\u8197?+\u8197?...\u8197?+\u8197?{\i x}{\sub 1}\u8197?\u215?\u8197?2{\super 1}\u8197?+\u8197?{\i x}{\sub 0}\u8197?\u215?\u8197?2{\super 0} y, si queremos escribir el m\u225?s grande de todos, deber\u225?n ser todos los {\i x}{\sub {\i i}} iguales a 1. ({\b Pregunta}: \u191?Por qu\u233? si el n\u250?mero {\i n} tiene {\i k} d\u237?gitos binarios, el \u237?ndice del m\u225?s significativo es {\i k}\u8197?\u8722?\u8197?1 y no {\i k}?)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Esta suma vale entonces\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\i x}{\sub {\i k}\u8197?\u8722?\u8197?1}\u8197?\u215?\u8197?2{\super {\i k}\u8197?\u8722?\u8197?1}\u8197?+\u8197?...\u8197?+\u8197?{\i x}{\sub 1}\u8197?\u215?\u8197?2{\super 1}\u8197?+\u8197?{\i x}{\sub 0}\u8197?\u215?\u8197?2{\super 0}\u8196?=\u8196? \u8196?=\u8196?1\u8197?\u215?\u8197?2{\super {\i k}\u8197?\u8722?\u8197?1}\u8197?+\u8197?...\u8197?+\u8197?1\u8197?\u215?\u8197?2{\super 1}\u8197?+\u8197?1\u8197?\u215?\u8197?2{\super 0}\u8196?=\u8196? \u8196?=\u8196?2{\super {\i k}\u8197?\u8722?\u8197?1}\u8197?+\u8197?...\u8197?+\u8197?2{\super 1}\u8197?+\u8197?2{\super 0}\u8196?=\u8196? \u8196?=\u8196?2{\super {\i k}}\u8197?\u8722?\u8197?1\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Usando ambos argumentos hemos llegado a que el n\u250?mero m\u225?s grande que podemos representar con {\i k} d\u237?gitos binarios es 2{\super {\i k}}\u8197?\u8722?\u8197?1. Por lo tanto, {\b el rango de representaci\u243?n de un sistema sin signo a {\i k} d\u237?gitos es [0,\u8198?2{\super {\i k}}\u8197?\u8722?\u8197?1]}. Todos los n\u250?meros representables en esta clase de sistemas son {\b positivos o cero}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Representaci\u243?n con signo\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En la vida diaria manejamos continuamente n\u250?meros negativos, y los distinguimos de los positivos simplemente agregando un signo "menos". Representar esos datos en la memoria de la computadora no es tan directo, porque, como hemos visto, la memoria {\b solamente puede alojar ceros y unos}. Es decir, \u161?no podemos simplemente guardar un signo "menos"! Lo \u250?nico que podemos hacer es almacenar secuencias de ceros y unos.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Esto no era un problema cuando los n\u250?meros eran no negativos. Para poder representar, ahora, tanto n\u250?meros {\b positivos como negativos}, necesitamos cambiar la forma de representaci\u243?n. Esto quiere decir que una secuencia particular de d\u237?gitos binarios, que en un sistema sin signo tiene un cierto significado, ahora tendr\u225? un significado diferente. Algunas secuencias, que antes representaban n\u250?meros positivos, ahora representar\u225?n negativos.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Veremos los {\b sistemas de representaci\u243?n con signo} llamados {\b Signo-magnitud (S-M)}, {\b Complemento a 2 (C2)} y {\b En exceso a }2{\super {\i n}}\u8197?\u8722?\u8197?1**.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Es importante tener en cuenta que {\b solamente se puede operar entre datos representados con el mismo sistema de representaci\u243?n}, y que el {\b resultado} de toda operaci\u243?n {\b vuelve a estar representado en el mismo sistema}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Sistema de Signo-magnitud (S-M)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 El sistema de {\b Signo-magnitud} no es el m\u225?s utilizado en la pr\u225?ctica, pero es el m\u225?s simple de comprender. Se trata\par}
}
