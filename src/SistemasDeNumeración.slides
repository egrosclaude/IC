<!-- INCLUDE src/reveal.header -->
				
<section data-markdown data-coursemod-shown="false"> 
 <script type="text/template">
##Unidad I 
###Representación de la Información 

1. Sistemas de Numeración <!-- .element: class="postit" -->
1. Unidades de Información
1. Representación Digital de Datos 
 </script>
</section>


<section>
<h2>Sistemas de Numeración</h2>
<aside data-markdown class="notes">
En este primer tema de la unidad veremos las propiedades de los sistemas de numeración más importantes para el estudio de la arquitectura de computadoras, en especial los sistemas **binario y hexadecimal**.
</aside>
</section>

<section>
<h2>Contando con los dedos</h2>
<div id="senarycontainer" class="snapsvg stretch" width="100%" height="100%">
	<svg id="senary" viewBox="0 0 400 200" width="100%" height="100%"></svg>
	<!-- {
		"initialize": "function(container, options) { 
			var svg = Snap('#senary');
			var conv = [], img = [], dig = [];
			var num = 0;
			var txtattr = { fontSize: '20', fontFamily: 'Helvetica', 
				textAnchor: 'middle', dominantBaseline: 'middle', 
				alignmentBaseline: 'middle'};
			var format = 'img/manos/mickey/{h}h{x}.svg';

			function debounce(func, wait, immediate) {
			  var timeout;
			  return function() {
			    var context = this,
			      args = arguments;
			    var later = function() {
			      timeout = null;
			      if (!immediate) func.apply(context, args);
			    };
			    var callNow = immediate && !timeout;
			    clearTimeout(timeout);
			    timeout = setTimeout(later, wait);
			    if (callNow) func.apply(context, args);
			  };
};

			var WIDGET; 
			var widget = function(n, liminf, limsup, callback) {
				this.n = n;
				this.down = svg.polyline(1,5, 10,0, 10,10);
				this.text = svg.text(25,5,n.toString()).attr(txtattr);
				this.up = svg.polyline(40,0, 40,10, 49,5);
				this.set = function(n) { 
					if(this.handled) return;
					this.handled = true;
					callback(n); 
					this.svg[1].node.innerHTML = n; 
					this.handled = false;
				}; 
				this.value = function() { return this.svg[1].node.innerHTML };
				this.downOnClick = function() { this.attr({fill:'#aaf'}); if(1 * WIDGET.value() > liminf) WIDGET.set(1 * WIDGET.value() - 1); this.animate({fill:'#000'},100); };
				this.upOnClick   = function() { this.attr({fill:'#aaf'}); if(1 * WIDGET.value() < limsup) WIDGET.set(1 * WIDGET.value() + 1); this.animate({fill:'#000'},100); };
				this.down.click(debounce(this.downOnClick, 10, false));
				this.up.click(debounce(this.upOnClick, 10, false));
				this.svg = svg.g(this.down, this.text, this.up);
			};


			var convb6 = function(n) {
				for(var i = 0; i < 4; i++) {
					if(img[i]) img[i].attr({opacity: '0.0'});
					if(dig[i]) dig[i].attr({opacity: '0.0'});
				}
				var i = 3;
				do {
					conv[i] = n % 6;
					var src = Snap.format(format,{ h: ((i % 2 === 1)? 'r' : 'l'), x: conv[i]});
					img[i] = svg.image(src,70 * i,0,90,90)
						.attr({opacity: '0.0'})
						.animate({opacity: '1.0'},50);
					dig[i] = svg.text(70 * i + 45, 100, conv[i].toString()).attr(txtattr);
					n = Math.floor(n / 6);
					i--;
				} while((n > 0) && (i >= 0));
			}; 

			WIDGET = new widget(num, 0, 99, convb6);
			WIDGET.svg.transform('T158 160S3');
			convb6(num);
	}"
	} -->

</div>
<aside data-markdown class="notes">
Todos conocemos el método tradicional de contar con los dedos. Como tenemos cinco dedos
en cada mano, podemos contar hasta diez. Pero también podemos utilizar un método diferente 
del tradicional, que resulta ser muy interesante. 

Con este método, al llegar a 5 con la mano derecha, representamos el 6 **sólo con un dedo 
de la izquierda**. Los dedos de la mano derecha **vuelven a 0**, y seguimos contando
con la derecha. 

Cada vez que se agotan los dedos de la mano derecha levantamos un nuevo dedo de la izquierda,
y la derecha vuelve a 0.  Cada dedo en alto de la mano izquierda significa que se agotó la secuencia de la mano 
derecha una vez. 

Notemos que este método tiene mayor capacidad que el tradicional, ya que podemos contar hasta
diez y todavía nos queda mucho por contar con los dedos de ambas manos. 

Notemos además que esta ventaja se debe a que el método asigna **valores diferentes** a ambas
manos. La derecha vale la cantidad de dedos que muestre, pero la izquierda vale **seis por
su cantidad de dedos**. Esto se abrevia diciendo que se trata de un **sistema de numeración
posicional**. Por otra parte, al ser posicional, podemos representar números relativamente
grandes con pocos dígitos. En este sistema, disponemos únicamente de **6 dígitos (0, 1, 2,
3, 4, 5)** porque ésos son los que podemos representar con cada mano, es decir, **en cada
posición**. Pero los números representables solamente dependen de cuántas manos (o, mejor 
dicho, de cuántas **posiciones**) podamos utilizar.

Dado un número no negativo que se pueda representar con dos manos, podemos saber qué dedos levantar 
en cada mano haciendo una sencilla cuenta de división entera (sin decimales): dividimos el número por 6 
y tomamos el cociente y el resto.  **El cociente es el número de la izquierda, y el resto, el de la derecha**.

Tomemos por ejemplo el número 15. Al dividir 15 por 6, el cociente es 2 y el resto es 3. En este sistema, 
escribimos el 15 como **dos dedos en la izquierda, y tres dedos en la derecha**, lo que podemos abreviar como **2,3**
o directamente **23** (que se pronuncia **dos tres** porque **no quiere decir veintitrés**, sino 
**quince**, sólo que escrito en este sistema).  Como el dígito 2 de la izquierda vale por 6, si hacemos la operación 
de sumar **$2 \times 6 + 3$** obtenemos, efectivamente, 15. 

- ¿Hasta qué número se puede representar en este sistema, sólo con dos manos? 
- Si agregamos una tercera mano, de un amigo, ¿hasta qué número llegamos? 
- ¿Y cómo se representa el 36? ¿Y el 37?
- Y, si el número no se puede representar con dos manos, ¿cómo es el procedimiento para saber qué
dedos levantar?

</aside>

</section>



 


<!--------------------------------------
<section>
<h2>Sistema posicional</h2>
<ul>
<li>Tenemos un sistema con una cierta cantidad de dígitos (la <b>base</b>)</li>
<ul>
<li>Para contar objetos, vamos asignando a cada objeto los dígitos disponibles en el sistema</li>
<li>Al acabarse los dígitos, volvemos a 0</li>
<li>Pero anotamos que se agotó la secuencia con un 1 a la izquierda</li>
<li>Este 1 tiene el <i>peso</i>, o representa el valor, de la base</li>
</ul>
</ul>
</section>
 
<section>
<h2>Sistema posicional</h2>
<div class="double">
	<ul>
	<div>
		<li>Cada vez que se agota la secuencia en una posición, incrementamos la posición a su izquierda</li>
	</div>
	<span></span>
	<div>
		<li>Al agotarse la secuencia en la posición de la izquierda:</li>
			<ul>
				<li style="fontSize: smaller">Usamos una posición todavía más a la izquierda</li>
				<li style="fontSize: smaller">y volvemos a empezar con 0 en todas las demás posiciones a su derecha</li>
			</ul>
	</div>
	</ul>
</div>
</section>


-------------------------------------->



<section>
<h2>Sistema decimal</h2>
<ul>
<li>Nuestros dígitos habituales son 0, 1, 2, 3, 4, 5, 6, 7, 8, 9</li>
<li>Son diez dígitos</li>
<li>Nuestra <b>base</b> habitual es 10</li>
<li>En este sistema:</li>
<ul>
	<li>$15 = 1 \times 10 + 5$</li>
	<li>$125 = 1 \times 100 + 2 \times 10 + 5$</li>
	<li>$3125 = 3 \times 1000 + 1 \times 100 + 2 \times 10 + 5$</li>
</ul>
</ul>
<aside data-markdown class="notes">
Si reflexionamos sobre el sistema decimal, de diez dígitos, encontramos que las cifras de las decenas
y de las unidades (y de las centenas, y de las unidades de mil, etc.) también forman un sistema posicional, 
sólo que con 10 dígitos en lugar de los seis del sistema anterior. 
Cuando escribimos **15** en el sistema decimal, esta expresión equivale a decir "para saber de qué cantidad estoy hablando,
tome el 1 y multiplíquelo por 10, y luego sume el 5".

Cuando queremos pasar esa expresión a un sistema con otra cantidad de dígitos, 
el procedimiento de averiguar los dígitos que van en cada posición
se llama **conversión de base**. La **base** de un sistema es la cantidad de dígitos de que dispone, o sea que
el sistema decimal habitual es de base 10, mientras que el de los deditos es de base 6. 

Anteriormente escribíamos **15** en el sistema de base 6 como **23**. Sin embargo, necesitamos evitar la confusión 
entre ambos significados de **23**. Para esto usamos índices subscriptos que indican la base. Así, **quince** es
**$15_{(10}$** porque está en base diez (la del sistema decimal, habitual) y **$23_{(10}$** es **veintitrés**, pero 
**$23_{(6}$** es **dos tres en base 6**, y por lo tanto vale **quince**. Como 10 es nuestra base habitual, cuando 
no usemos índice subscripto estaremos sobreentendiendo que hablamos **en base 10**, Es decir, **$15_{(10}$** se
puede escribir, simplemente, **$15$**.

Notemos, de paso, que un mismo número puede escribirse de muchas maneras: en prácticamente cualquier base que 
se nos ocurra, sin necesidad de contar con los dedos; y que la forma habitual, en base 10, no es más
importante o mejor que las otras (salvo, claro, que ya estamos acostumbrados a ella). Otras culturas han desarrollado
otros sistemas de numeración y escriben los números de otra manera. Esto muestra que hay una **diferencia entre
número y numeral**, diferencia que es algo difícil de ver debido a la costumbre de identificar a los números con su
representación en decimal. 
- El **numeral** es lo que escribimos ($15$, **$15_{(10}$** o **$23_{(6}$**). 
- El **número** es la cantidad de la cual estamos hablando (la misma en los tres casos).
</aside>
</section>


<section>
<h2>Sistema binario</h2>
<ul>
<li>Tenemos dos dígitos</li>
<li>Los dígitos son 0, 1</li>
<li>En este sistema:</li>
<ul>
	<li>$15 = 1\times8 + 1\times4 + 1\times2 + 1\times1 = 1111_{(2}$</li>
	<li>$125 = 1\times64 + 1\times32 + 1\times16$ $ + 1\times8 + $ $1\times4 + 0\times2 + 1\times1$ $= 1111101_{(2}$</li>
</ul>
<li>¿Cómo se escriben los números 0 y 1 en base 2?</li>
<li>¿Cómo se escribe 2 en base 2?</li>
<li>¿Cómo se escriben 3, 4, 5, en base 2?</li>
</ul>
<aside data-markdown class="notes">
Comprender y manejar la notación en sistema binario es sumamente importante para el estudio de la computación. El sistema binario comprende únicamente dos dígitos, **0 y 1**. 

Las computadoras digitales, tal como las conocemos hoy, almacenan todos sus datos en forma de números binarios. Es **muy recomendable**, para la práctica de esta materia, adquirir velocidad y seguridad en la conversión de y a sistema binario.
</aside>
</section>


<section>
<h2>Sistema hexadecimal</h2>
<ul>
<li>¿Y en base 16?</li>
<li>Tenemos dieciséis dígitos</li>
<li>Los dígitos son 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, ... </li>
<span class="fragment"> A, B, C, D, E, F</span></li>
<li>¿Cómo se escribe <b>8</b> en base 16?</li>
<li>¿Y <b>10</b> en base 16?</li>
<li>¿Y <b>15</b>?</li>
<li>¿Y <b>16</b>?</li>
<li>¿Y <b>17</b>?</li>
<li>¿Y <b>32</b>?</li>
</ul>
<aside data-markdown class="notes">
Otro sistema de numeración importante es el hexadecimal o de base 16. En este sistema tenemos **más dígitos** que en el decimal, por lo cual tenemos que recurrir a "dígitos" nuevos, tomados del alfabeto. Así, A representa el 10, B el 11, etc.

El sistema hexadecimal nos resultará útil porque con él podremos expresar fácilmente números que llevarían muchos dígitos en sistema binario. 
- La conversión entre binarios y hexadecimales es sumamente directa.
- Al ser un sistema con más dígitos que el binario, la expresión de cualquier número será más corta.
</aside>
</section>

<!------------
<section>
<h2>Especificando la base</h2>
<ul>
<li>Para evitar ambigüedades especificamos la base en forma suscripta</li> 
<ul>
<li>"Los $101_{(10}$ Dálmatas"</li>
<li>"Los $101_{(2}$  Dálmatas"</li>
</ul>
</ul>
<aside data-markdown class="notes">
</aside>
<aside data-markdown class="notes">
</aside>
</section>
------------>

<section data-background="#3cb5c5" data-background-transition="zoom" data-coursemod-shown="false">
<h2>¿Preguntas?</h2>
<aside data-markdown class="notes">
</aside>
</section>



<section data-background="#3c53b5" data-background-transition="zoom" class="preguntas" data-coursemod-shown="false">
<h2>¡Preguntas!</h2>
<ol>
<li class="fragment">Dado un sistema posicional de base $b$, ¿cómo se escribe $b$ en ese sistema?</li>
<li class="fragment">¿Y $b + 1$?</li>

<li class="fragment">¿Y $b^2$?</li>
<li class="fragment">¿Cómo se escribe 26 en base 5?
<li class="fragment">¿Cómo se escribe 17 en base 16, en base 5, en base 2, en base 10?
<li class="fragment">¿A qué número me refiero cuando escribo 101?
</ol>
<aside data-markdown class="notes">
</aside>
</section>


<section data-background="#3c53b5" data-background-transition="zoom" class="preguntas" data-coursemod-shown="false">
<h2>Preguntas</h2>
<ol>
<li class="fragment">¿Cómo se escribe <b>la base</b>, en un sistema de base 10?</li>
<li class="fragment">¿Cómo se escribe <b>la base al cuadrado</b>, en un sistema de base 10?</li>
<li class="fragment">¿Y al cubo?</li>
<li class="fragment">¿Y a la cuarta?</li>
<li class="fragment">¿Y lo mismo, pero en otras bases?</li>
</ol>
<aside data-markdown class="notes">
</aside>
</section>

<section id="potencias">
<h2>Expresión general</h2>
Todo entero no negativo $n$ se escribe en base $b$ como
<p>
$n = \sum_{i=0}^{k}{x_i \times b^i} = $
</p>
<p class="fragment">
$= x_k \times b^k + \ldots + x_{2} \times b^{2} + x_1 \times b^1 +x_0 \times b^0$
</p>
<p class="fragment">
Con $0 \le x_i \lt b$
</p>

<aside data-markdown class="notes">
</aside>
</section>


<section id="potencias">
<h2>Expresión general</h2>
<p>
$n = x_k \times b^k + \ldots + x_{2} \times b^{2} + x_1 \times b^1 +x_0 \times b^0$
</p>
<p class="postit fragment">
$2017_{(10} = 2 $
<span class="fragment">$\times 1000 + $</span>
$0 $
<span class="fragment">$\times 100 + $</span>
$1 $
<span class="fragment">$\times 10 + $</span>
$7 $
<span class="fragment">$\times 1$</span>
</p>


<p class="postit fragment">
$2017_{(10} = 2 $
<span class="fragment">$\times 10^{3} + $</span>
$0 $
<span class="fragment">$\times 10^{2} + $</span>
$1 $
<span class="fragment">$\times 10^{1} + $</span>
$7 $
<span class="fragment">$\times 10^{0}$</span>
</p>

<p class="postit fragment">
$2017_{(8} = 2 $
<span class="fragment">$\times 8^{3} + $</span>
$0 $
<span class="fragment">$\times 8^{2} + $</span>
$1 $
<span class="fragment">$\times 8^{1} + $</span>
$7 $
<span class="fragment">$\times 8^{0}$</span>
<span class="fragment">$ = 1039_{(10}$</span>
</p>

<aside data-markdown class="notes">
</aside>
</section>


<section>
<h2>Conversión de base</h2>
<ul>
<li>De decimal a base $b$</li>
<li>De base $b$ a decimal</li>
<li>De base $b_1$ a $b_2$</li>
</ul>
<aside data-markdown class="notes">
</aside>
</section>

<!--------------------------------
<section>
<h2>De decimal a base $b$</h2>
Convertir $61_{(10}$ a base $3$
<table>
<tr><td>Número</td><td>Número/3</td><td>Resto</td></tr>
<tr><td class="fragment">61</td><td class="fragment">20</td><td class="fragment postit">1</td></tr>

<tr><td class="fragment">20</td><td class="fragment">6</td><td class="fragment postit">2</td></tr>
<tr><td class="fragment">6</td><td class="fragment postit">2</td><td class="fragment postit">0</td></tr>
<tr></tr>
</table>
<p>
<span class="fragment">$61_{(10} = 2 \times 3^3 + 0 \times 3^2 + 2 \times 3 + 1$ </span>
</p>
<span class="fragment">$61_{(10} = 2021_{(3}$ </span>
<aside data-markdown class="notes">
</aside>
</section>
-------------------------------->
<section>
<h2>Decimal a base $b$</h2>
Convertir $61_{(10}$ a base $3$
<p></p>
<table style="width: 50%; font-size: 38px; border:none; border-bottom:none; border-collapse:separate;">
<tr><td style="border-bottom:none;">61</td><td style="border-left: 2px solid #000; border-bottom: 2px solid #000">3</td><td colspan="2" style="border-bottom:none;"></td></tr>

<tr><td class="fragment" style="border-bottom:none; color:#33f; " >1</td><td class="fragment" style="border-bottom:none;" >20</td><td class="fragment" style="border-bottom:2px solid #000; border-left:2px solid #000;">3</td><td style="border-bottom:none;"></td></tr>

<tr ><td style="border-bottom:none;" ></td><td class="fragment" style="border-bottom:none;color:#33f; " >2</td><td class="fragment" style="border-bottom:none;">6</td><td class="fragment" style="border-bottom:2px solid #000; border-left:2px solid #000;">3</td></tr>

<tr><td></td><td></td><td class="fragment" style="color:#33f;" >0</td><td class="fragment" style="color:#33f;" >2</td></tr>
</table>

<p></p><p></p>
<span class="fragment">$61_{(10} = 2021_{(3}$ </span>
<aside data-markdown class="notes">
</aside>
</section>



<section>
<h2>De base $b$ a decimal</h2>
<p>
<span class="fragment">$2021_{(3} =\ ?$ </span>
</p>
<span class="fragment">Aplicamos la <a href="#/potencias" target="_blank">Expresión general</a></span>

<p> <span class="fragment">$2021_{(3} = 2 \times 3^3 + 0 \times 3^2 + 2 \times 3^1 + 1 \times 3^0$ </span> </p>
<p> <span class="fragment">$= 2 \times 3^3 + 0 \times 3^2 + 2 \times 3 + 1 \times 1 =  $ </span> </p>
<p> <span class="fragment">$= 2 \times 27 + 0 \times 9 + 2 \times 3 + 1 \times 1 =  $ </span> </p>
<p> <span class="fragment">$= 54 + 0 + 6 + 1  =  61_{(10}$ </span> </p>
<aside data-markdown class="notes">
</aside>
</section>

<section data-background="#3c53b5" data-background-transition="zoom" data-coursemod-shown="false" class="preguntas">
<h2>¿Más preguntas?</h2>
<aside data-markdown class="notes">
</aside>
</section>

<section data-transition="convex-in convex-out" data-coursemod-shown="false">
<h2>Humor para nerds</h2>
<span class="fragment" data-fragmentshown="nextimg" data-fragmenthidden="previmg"></span>
<div class="snapsvg stretch" width="100%" height="100%">
	<svg id="slideshow" viewBox="0 0 400 260" width="100%" height="100%"></svg>
	<!-- {
		"set"   : ["img/finger-1.png", "img/finger-2.png"], 
		"initialize": "function(container, options) { 
			var svg = Snap('#slideshow');
			var img;
			var d1 = 500;
			var imgset = options.set;
			var setcount = imgset.length;
			var round = 0;

			var showimg = function(n) { 
				var src = imgset[n];
				var img = svg.image(src,0,0,400,260).attr({opacity: '0.0'});
				img.animate({opacity: '1.0'},d1);
			}; 
			var nextimg = function() { round=(round+1)%setcount; showimg(round); };
			var previmg = function() { round=(round-1)%setcount; showimg(round); };

			Reveal.addEventListener('fragmentshown', function(event){ 
				var hndlr = event.fragment.getAttribute('data-fragmentshown'); 
				eval(hndlr)(event.fragment); });
			Reveal.addEventListener('fragmenthidden', function(event){ 
				var hndlr = event.fragment.getAttribute('data-fragmenthidden'); 
				eval(hndlr)(event.fragment); });

			showimg(0);
		}"
	} -->
</div>
</section>


<!-------
			//Reveal.addEventListener('fragmentshown',
			//	function(event){ eval(event.fragment.getAttribute('data-fragmentshown'))(event.fragment); });
			//Reveal.addEventListener('fragmenthidden',
			//	function(event){ eval(event.fragment.getAttribute('data-fragmenthidden'))(event.fragment); });
<section data-transition="slide-in fade-out" data-coursemod-shown="false">
<h2>Humor para nerds</h2>
<img class="plain stretch" src="img/finger-1.png" >
<aside data-markdown class="notes">
</aside>
</section>

<section data-transition="slide-out fade-in" data-coursemod-shown="false">
<h2>Humor para nerds</h2>
<img class="plain stretch" src="img/finger-2.png">
<aside data-markdown class="notes">
</aside>
</section>
--->

<!-----
<section data-background="#3c53b5" data-background-transition="zoom" data-coursemod-shown="false" class="preguntas">
<h2>¡Más preguntas!</h2>
<ol>
<li class="fragment">Si contáramos en base 2 con los dedos (dedo estirado = 1, dedo recogido = 0), ¿hasta qué número podríamos contar con una mano? ¿Y con las dos?</li>
<li class="fragment">¿Cómo sería un sistema posicional en base 6 con ambas manos? La derecha contando las unidades y la izquierda las "seisenas"...</li>
<li class="fragment">¿Hasta cuánto podríamos contar con este sistema?</li>
</ol>
<aside data-markdown class="notes">
</aside>
</section>
--->

<section data-background="#3c53b5" data-background-transition="zoom" data-coursemod-shown="false" class="preguntas">
<h2>Y más preguntas</h2>
<p>
El número $28_{(x}$ está en una base desconocida. 
Esa base, ¿puede ser...
</p>
<ul>
<li class="fragment">...2?</li>
<li class="fragment">...8?</li>
<li class="fragment">...10?</li>
<li class="fragment">...16?</li>
</ul>
<aside data-markdown class="notes">
</aside>
</section>


<section>
<h2>Conversión de base $b_1$ a base $b_2$</h2>
<ul>
	<li>Caso general</li>
	<ul>
		<li>De base $b_1$ a decimal, y de decimal a base $b_2$</li>
	</ul>
	<li>Casos especiales</li>
	<ul>
		<li>Binario (base 2) &#11012 hexadecimal (base 16)</li>
		<li>Binario &#11012 octal (base 8)</li>
	</ul>
</ul>
<aside data-markdown class="notes">
</aside>
</section>

<section data-transition="slide-in fade-out" data-transition-speed="slow">
<h2>Equivalencias</h2>
<img class="stretch" src="img/equivalencias.png">
<aside data-markdown class="notes">
</aside>
</section>

<section data-transition="fade-in fade-out" data-transition-speed="slow">
<h2>Equivalencias</h2>
<img class="stretch" src="img/equivalencias-octal.png">
<aside data-markdown class="notes">
</aside>
</section>

<section data-transition="fade-in slide-out" data-transition-speed="slow">
<h2>Equivalencias</h2>
<img class="stretch" src="img/equivalencias-hexa.png">
<aside data-markdown class="notes">
</aside>
</section>

<section>
<h2>Binario a hexadecimal</h2>
<ul>
<li class="postit">Cada cuatro dígitos binarios representan un dígito hexadecimal</li>
<ul>
<li>Agrupo los dígitos binarios de a cuatro y reemplazo cada grupo por el dígito hexadecimal equivalente:</li>
<ul>
$11100010_{(2} = E2_{(16}$
</ul>
<li>Si es necesario, para obtener grupos de cuatro dígitos, completo con ceros a la izquierda:
<ul>
$100010_{(2} = 00100010_{(2} = 22_{(16}$
</ul>
</ul>
<li>Hexadecimal a binario: procedimiento inverso</li>
</ul>
</section>
<aside data-markdown class="notes">
</aside>

<section>
<h2>Binario a octal</h2>
<ul>
<li class="postit">Cada <b>tres</b> dígitos binarios representan un dígito octal</li>
<ul>
<li>Agrupo los dígitos binarios de a tres y reemplazo cada grupo por el dígito octal equivalente:</li>
<ul>
$100010_{(2} = 42_{(8}$
</ul>
<li>Si es necesario, para obtener grupos de tres dígitos, completo con ceros a la izquierda:
<ul>
$1100010_{(2} = 001100010_{(2} = 142_{(8}$
</ul>
</ul>
<li>Octal a binario: procedimiento inverso</li>
</ul>
</section>
<aside data-markdown class="notes">
</aside>


<section data-markdown>
##Resumen conversión de base
1. Decimal a base $b$
 * División iterativa por la base (último cociente y restos)
2. Base $b$ a decimal
 * Calcular la suma de potencias de la base
3. Binario &#11012 hexa
 * Agrupar los dígitos binarios de a 4
4. Binario &#11012 octal
 * Agrupar los dígitos binarios de a 3

</section>

<section data-background="#3c53b5" data-background-transition="zoom" data-coursemod-shown="false" class="preguntas">
<h2>Y más preguntas</h2>
<ol>
<li>$AF3_{(16} = X_{(10}$ <span class="fragment"> $= 2803_{(10}$</li>
<li>$AF3_{(16} = X_{(2}$ <span class="fragment"> $= 101011110011_{(2}$</li>
<li>$36_{(8} = X_{(10}$ <span class="fragment"> $= 30_{(10}$</li>
<li>$36_{(8} = X_{(2}$ <span class="fragment"> $= 011110_{(2}$</li>
<li>$101001101_{(2} = X_{(8}$<span class="fragment"> $= 515_{(8}$</li>
<li>$101001101_{(2} = X_{(10}$<span class="fragment"> $= 333_{(10}$</li>
<li>$101001101_{(2} = X_{(16}$<span class="fragment"> $= 14D_{(16}$</li>
</ol>
</section>


<section data-coursemod-shown="false">
<h2>Y hasta un jueguito</h2>
<div class="snapsvg stretch" width="100" height="100">
	<svg id="bingame" viewBox="0 0 100 100" width="100%" height="100%"></svg>
	<script src="src/bingame.js"></script>
	<!-- { "initialize": "function(container, options) { 
		svg = Snap('#bingame');

		Snap.plugin(function(Snap, Element, Paper, global) {
		  Element.prototype.blur = function(callback) {
		    var f = svg.filter(Snap.filter.blur(5, 10));
		    var filterChild = f.node.firstChild;
		    this.attr({
		      filter: f
		    }); 
		    Snap.animate(0, 10, function(v) {
		      filterChild.attributes[0].value = v + ',' + v;
		    }, 1000);
		    setTimeout(callback, 1000);
		  };  
		});


		Bingame();
	}" } -->
</div>
</section>
	

<!-- INCLUDE src/reveal.trailer -->
