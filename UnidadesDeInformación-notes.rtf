{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \qc \f0 \sa180 \li0 \fi0 \b \fs36 Unidades de Informaci√≥n\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Contents\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Unidades de Informaci\u243?n\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Informaci\u243?n\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Bit\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab El viaje de un bit\sa180\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Byte\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Representando datos con bytes\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Sistema Internacional\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab Sistema de Prefijos Binarios\sa180\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Unidades de Informaci\u243?n\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En este segundo tema de la unidad veremos qu\u233? es la informaci\u243?n y c\u243?mo podemos cuantificar, es decir, medir, la cantidad de informaci\u243?n que puede alojar un dispositivo, o la cantidad de informaci\u243?n que representa una pieza cualquiera de informaci\u243?n. Veremos adem\u225?s las relaciones entre las diferentes unidades de informaci\u243?n.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Informaci\u243?n\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A lo largo de la historia se han inventado y fabricado m\u225?quinas, que son dispositivos que {\b transforman la energ\u237?a}, es decir, convierten una forma de energ\u237?a en otra. Las computadoras, en cambio, convierten una forma de {\b informaci\u243?n} en otra.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Los programas de computadora reciben alguna forma de informaci\u243?n (la {\b entrada} del programa), la {\b procesan} de alguna manera, y emiten alguna informaci\u243?n de {\b salida}. La {\b entrada} es un conjunto de datos de partida, para que trabaje el programa, y la {\b salida} generada por el programa es alguna forma de respuesta o soluci\u243?n a un problema. Sabemos, adem\u225?s, que el material con el cual trabajan las computadoras son textos, documentos, mensajes, im\u225?genes, sonido, etc. Todas estas son formas en las que se codifica y se almacena la informaci\u243?n.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Un epistem\u243?logo dice que la informaci\u243?n es "una diferencia relevante". Si vemos que el sem\u225?foro cambia de rojo a verde, recibimos informaci\u243?n ("podemos avanzar"). Al cambiar el estado del sem\u225?foro aparece una {\b diferencia} que puedo observar. Es {\b relevante} porque modifica de alguna forma el estado de mi conocimiento o me permite tomar una decisi\u243?n respecto de algo.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \u191?Qu\u233? es, exactamente, esta informaci\u243?n? No podemos tocarla ni pesarla, pero \u191?se puede medir? Y si se puede medir, \u191?entonces se puede medir la cantidad de informaci\u243?n que aporta un texto, una imagen?\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Bit\par}
{\pard \ql \f0 \sa180 \li0 \fi0 La Teor\u237?a de la Informaci\u243?n, una teor\u237?a matem\u225?tica desarrollada alrededor de 1950, dice que el {\b bit} es "la m\u237?nima unidad de informaci\u243?n". Un bit es la informaci\u243?n que recibimos "cuando se especifica una de dos alternativas igualmente probables". Si tenemos una pregunta {\b binaria}, es decir, aquella que puede ser respondida {\b con un s\u237? o con un no}, entonces, al recibir una respuesta, estamos recibiendo un bit de informaci\u243?n. Las preguntas binarias son las m\u225?s simples posibles (porque no podemos decidir entre {\b menos} respuestas), de ah\u237? que la informaci\u243?n necesaria para responderlas sea la m\u237?nima unidad de informaci\u243?n.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 De manera que un bit es una unidad de informaci\u243?n que puede tomar s\u243?lo dos valores. Podemos pensar estos valores como {\b verdadero o falso}, como {\b s\u237? o no}, o como {\b 0 y 1}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Cuando las computadoras trabajan con piezas de informaci\u243?n complejas, como los textos o im\u225?genes, estas piezas son representadas como conjuntos ordenados de bits, de un cierto tama\u241?o. As\u237?, por ejemplo, la secuencia de ocho bits {\b 01000001} puede representar la letra A may\u250?scula. Un documento estar\u225? constituido por palabras; \u233?stas est\u225?n formadas por s\u237?mbolos como las letras, y \u233?stas ser\u225?n representadas por secuencias de bits.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 La memoria de las computadoras est\u225? dise\u241?ada de forma que {\b no se puede almacenar otra cosa que bits} en esa memoria. Los textos, las im\u225?genes, los sonidos, los videos, los programas que ejecuta, los mensajes que recibe o env\u237?a; todo lo que puede guardar, procesar, o emitir una computadora digital, debe estar en alg\u250?n momento representado por una secuencia de bits. Los bits son, en cierta forma, como los \u225?tomos de la informaci\u243?n. Por eso el bit es la unidad fundamental que usamos para medirla, y definiremos tambi\u233?n algunas unidades mayores, o m\u250?ltiplos.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 El viaje de un bit\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En una famosa pel\u237?cula de aventuras hay una ciudad en problemas. Uno de los h\u233?roes enciende una pila de le\u241?a porque se prepara un terrible ataque sobre la ciudad. La pila de le\u241?a es el dispositivo preestablecido que tiene la ciudad para pedir ayuda en caso de emergencia.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En la cima de la monta\u241?a que est\u225? cruzando el valle existe un puesto similar, con su propio mont\u243?n de le\u241?a, y un vig\u237?a. El vig\u237?a ve el fuego encendido en la ciudad que pide ayuda, y a su vez enciende su se\u241?al. Lo mismo se repite de cumbre en cumbre, atravesando grandes distancias en muy poco tiempo, hasta llegar r\u225?pidamente a quienes est\u225?n en condiciones de prestar la ayuda. En una tragedia griega se dice que este ingenioso dispositivo se utiliz\u243? en la realidad, para comunicar en tan s\u243?lo una noche la noticia de la ca\u237?da de Troya.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 La informaci\u243?n que est\u225? transportando la se\u241?al que viaja es la respuesta a una pregunta muy sencilla: {\b "\u191?la ciudad necesita nuestra ayuda?"}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Esta pregunta es {\b binaria}: se responde con un s\u237? o con un no. Por lo tanto, lo que ha viajado es {\b un bit de informaci\u243?n}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Notemos que, en los manuales de l\u243?gica o de inform\u225?tica, encontraremos siempre asociados los {\b bits} con los valores de {\b 0 y 1}. Aunque esto es \u250?til a los efectos de emplear los bits en computaci\u243?n, no es del todo exacto. Lo que est\u225? codificando un bit no es exactamente un d\u237?gito. Lo que viaj\u243? desde la ciudad sitiada hasta su destino no es un 0 ni un 1. Es {\b un bit de informaci\u243?n}, aquella unidad de informaci\u243?n que permite tomar una decisi\u243?n entre dos alternativas.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Byte\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Como el bit es una medida tan peque\u241?a de informaci\u243?n, resulta necesario definir unidades m\u225?s grandes. En particular, y debido a la forma como se organiza la memoria de las computadoras, es \u250?til tener como unidad al {\b byte} (abreviado {\b B} may\u250?scula), que es una secuencia de {\b 8 bits}. Podemos imaginarnos la memoria de las computadoras como una estanter\u237?a muy alta, compuesta por estantes que contienen ocho casilleros. Cada una de estos estantes es una {\b posici\u243?n o celda de memoria}, y contiene exactamente ocho bits (un byte) de informaci\u243?n.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Como los valores de los bits que forman un byte son independientes entre s\u237?, existen 2{\super 8} diferentes valores para esos ocho bits. Si los asociamos con n\u250?meros en el sistema binario, esos valores ser\u225?n {\b 00000000}, {\b 00000001}, {\b 00000010}, ..., etc., hasta el {\b 11111111}. En decimal, esos valores corresponden a los n\u250?meros {\b 0, 1, 2, ..., 255}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Cada byte de la memoria de una computadora, entonces, puede alojar un n\u250?mero entre 0 y 255. Esos n\u250?meros representar\u225?n diferentes piezas de informaci\u243?n: si los vemos como bytes independientes, pueden representar {\b caracteres} como letras y otros s\u237?mbolos, pero tambi\u233?n pueden estar formando parte de otras estructuras de informaci\u243?n m\u225?s complejas, y tener otros significados.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Representando datos con bytes\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Para poder tratar y comunicar la informaci\u243?n, que est\u225? organizada en bytes, es necesario que exista una asignaci\u243?n fija de valores binarios a caracteres. Es decir, se necesita una {\b tabla de caracteres} que asigne un s\u237?mbolo a cada valor posible entre 0 y 255.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 La memoria de la computadora es como un espacio donde se almacenan temporariamente contenidos del tama\u241?o de un byte. Si pudi\u233?ramos ver el contenido de una secci\u243?n de la memoria mientras la computadora est\u225? trabajando, ver\u237?amos que cada byte tiene determinados contenidos binarios. Esos contenidos pueden codificar los caracteres de un mensaje, car\u225?cter por car\u225?cter.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Sabiendo que la memoria est\u225? organizada en bytes, es interesante saber qu\u233? capacidad tendr\u225? la memoria de una computadora dada y qu\u233? tama\u241?o tendr\u225?n las piezas de informaci\u243?n que caben en esta memoria. Como la memoria de una computadora, y la cantidad de informaci\u243?n que compone un mensaje, un programa, una imagen, etc., suelen ser muy grandes, utilizamos {\b m\u250?ltiplos} de la unidad de memoria, que es el byte.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Existen en realidad dos sistemas diferentes de m\u250?ltiplos: el {\b Sistema Internacional} y el {\b Sistema de Prefijos Binarios}. Las unidades de ambos sistemas son parecidas, pero no exactamente iguales.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Los dos sistemas difieren esencialmente en el factor de la unidad en los sucesivos m\u250?ltiplos. En el caso del Sistema Internacional, todos los factores son alguna potencia de 1000. En el caso del Sistema de Prefijos Binarios, todos los factores son potencias de 1024.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Sistema Internacional\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En el llamado Sistema Internacional, la unidad b\u225?sica, el byte, se multiplica por potencias de 1000. As\u237?, tenemos:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b kilobyte} (1000 bytes)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b megabyte} (1000 \u8197?\u215?\u8197? 1000 bytes = 1000 kilobytes = un mill\u243?n de bytes)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b gigabyte} (1000 \u8197?\u215?\u8197? 1000 \u8197?\u215?\u8197? 1000 bytes = mil megabytes = mil millones de bytes)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b terabyte} (1000 \u8197?\u215?\u8197? 1000 \u8197?\u215?\u8197? 1000 \u8197?\u215?\u8197? 1000 bytes = mil gigabytes = un bill\u243?n de bytes), y otros m\u250?ltiplos mayores.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Como puede verse, cada unidad se forma multiplicando la anterior por 1000.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Sistema de Prefijos Binarios\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En el llamado Sistema de Prefijos Binarios, el byte se multiplica por potencias de 2{\super 10}, que es 1024. As\u237?, tenemos:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b kibibyte} (1024 bytes)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b mebibyte} (1024 \u8197?\u215?\u8197? 1024 bytes, {\b aproximadamente} un mill\u243?n de bytes, pero exactamente 1048576 bytes)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b gibibyte} (1024 \u8197?\u215?\u8197? 1024 \u8197?\u215?\u8197? 1024 bytes, {\b aproximadamente} mil millones de bytes)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab El {\b tebibyte} (1024 \u8197?\u215?\u8197? 1024 \u8197?\u215?\u8197? 1024 \u8197?\u215?\u8197? 1024 bytes, aproximadamente un mill\u243?n de mebibytes, o aproximadamente un bill\u243?n de bytes), y otros m\u250?ltiplos mayores.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Como puede verse, cada unidad se forma multiplicando la anterior por 1024.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Notemos que los prefijos {\b kilo, mega, giga, tera}, del Sistema Internacional, cambian a {\b kibi, mebi, gibi, tebi}, del sistema de Prefijos Binarios.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \u191?Por qu\u233? existen {\b dos} sistemas en lugar de uno? En realidad la adopci\u243?n del Sistema de Prefijos Binarios se debe a las caracter\u237?sticas de la memoria de las computadoras:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Cada posici\u243?n o celda de la memoria tiene su direcci\u243?n, que es el n\u250?mero de la posici\u243?n de esa celda dentro del conjunto de toda la memoria de la computadora.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Cuando la computadora accede a una posici\u243?n o celda de su memoria, para leer o escribir un contenido en esa posici\u243?n, debe especificar la direcci\u243?n de la celda.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Como la computadora usa exclusivamente n\u250?meros binarios, al especificar la direcci\u243?n de la celda usa una cantidad de d\u237?gitos binarios.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Por lo tanto, la cantidad de posiciones que puede acceder usando direcciones es una potencia de 2: si usa 8 bits para especificar cada direcci\u243?n, acceder\u225? a 2{\super 8} bytes, cuyas direcciones estar\u225?n entre 0 y 255. Si usa 10 bits, acceder\u225? a 2{\super 10} bytes, cuyas direcciones ser\u225?n 0 a 1023.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Entonces, tener una memoria de, por ejemplo, exactamente {\b mil bytes}, complicar\u237?a t\u233?cnicamente las cosas porque las direcciones 1000 a 1023 no existir\u237?an. Si un programa quisiera acceder a la posici\u243?n 1020 habr\u237?a un grave problema. Habr\u237?a que tener en cuenta excepciones por todos lados y la vida de los dise\u241?adores de computadoras y de los programadores ser\u237?a lamentable.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab En consecuencia, todas las memorias se fabrican en tama\u241?os que son potencias de 2 y el Sistema de Prefijos Binarios se adapta perfectamente a medir esos tama\u241?os.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 En computaci\u243?n se utilizan, en diferentes situaciones, ambos sistemas de unidades. Es costumbre usar el Sistema Internacional para hablar de velocidades de transmisi\u243?n de datos, pero usar Prefijos Binarios al hablar de almacenamiento de memoria, o en unidades de almacenamiento permanente, como los discos.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Entonces, cuando un proveedor de servicios de Internet ofrece {\b un enlace de 1 Mbps}, nos est\u225? diciendo que por ese enlace podremos transferir {\b exactamente 1 mill\u243?n de bits por segundo}. El proveedor utiliza el Sistema Internacional.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Los textos, im\u225?genes, sonido, video, programas, etc., se guardan en {\b archivos}, que son sucesiones de bytes. Encontramos archivos en el disco de nuestra computadora, y podemos descargar archivos desde las redes. Cuando nos interesa saber cu\u225?nto mide un archivo, en t\u233?rminos de bytes, usamos el Sistema Internacional porque el archivo no tiene por qu\u233? tener un tama\u241?o que sea potencia de 2.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Por el contrario, los fabricantes de medios de almacenamiento, como memorias, discos r\u237?gidos o pendrives, deber\u237?an (aunque a veces no lo hacen) utilizar Prefijos Binarios para expresar las capacidades de almacenamiento de esos medios. As\u237?, un {\i "pendrive de diecis\u233?is gigabytes"}, si tiene una capacidad de 16\u8197?\u215?\u8197?2{\super 30} bytes, deber\u237?a publicitarse en realidad como {\i "pendrive de diecis\u233?is gibibytes"}.\sa180\par}
}
